
&НаКлиенте
Процедура ВыгрузкаПроизводственногоКалендаря(Команда)
	ВыгрузкаПроизводственногоКалендаряНаСервере();
КонецПроцедуры

&НаСервере
Процедура ВыгрузкаПроизводственногоКалендаряНаСервере()   
	
	СтрокаГод = СтрЗаменить(Год, Символы.НПП, "");
	НачалоИнтервала = Дата(СтрокаГод+"0101");
	КонецИнтервала = Дата(СтрокаГод+"1231");
	
	//XML
	//ЗаписьXML = Новый ЗаписьXML;	
	//Файл = Новый ТекстовыйДокумент;
	//Путь = "C:\Users\innai\Desktop\Test.xml";
	//Файл.Записать(Путь);
	//ЗаписьXML.ОткрытьФайл(Путь, "UTF-8");	
	//ЗаписьXML.ЗаписатьОбъявлениеXML();  	
	//ЗаписьXML.ЗаписатьНачалоЭлемента("Производственный календарь"); 
	//Выборка = РегистрыСведений.ПроизводственныйКалендарь.Выбрать(НачалоИнтервала,КонецИнтервала);	
	//Пока Выборка.Следующий() Цикл  
	//	
	//	ЗаписьXML.ЗаписатьНачалоЭлемента("Дата"); 	
	//	ЗаписьXML.ЗаписатьАтрибут("Календарь",Строка(Выборка.Календарь));
	//	ЗаписьXML.ЗаписатьАтрибут("Год",Строка(Выборка.Год));
	//	ЗаписьXML.ЗаписатьАтрибут("ВидДня",Строка(Выборка.ВидДня));
	//	ЗаписьXML.ЗаписатьАтрибут("ДатаПереноса",Строка(Выборка.ДатаПереноса));		
	//	ЗаписьXML.ЗаписатьКонецЭлемента(); 
	//	
	//КонецЦикла;
	//
	//ЗаписьXML.ЗаписатьКонецЭлемента();
	//
	
	//XLSX
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПроизводственныйКалендарь.Период,
		|	ПроизводственныйКалендарь.Календарь,
		|	ПроизводственныйКалендарь.Год,
		|	ПроизводственныйКалендарь.ВидДня
		|ИЗ
		|	РегистрСведений.ПроизводственныйКалендарь КАК ПроизводственныйКалендарь
		|ГДЕ
		|	ПроизводственныйКалендарь.Период >= &НачалоИнтервала
		|	И ПроизводственныйКалендарь.Период <= &КонецИнтервала";
	
	Запрос.УстановитьПараметр("КонецИнтервала", КонецИнтервала);
	Запрос.УстановитьПараметр("НачалоИнтервала", НачалоИнтервала);
	
	РезультатЗапроса = Запрос.Выполнить();
	ТаблицаЗначений = РезультатЗапроса.Выгрузить();
	Если ТаблицаЗначений.Количество() > 0 Тогда
		ПостроительОтчета = Новый ПостроительОтчета;
		ПостроительОтчета.ИсточникДанных = Новый ОписаниеИсточникаДанных(ТаблицаЗначений);
		ТабличныйДокумент = Новый ТабличныйДокумент;
		ПостроительОтчета.Вывести(ТабличныйДокумент);
		ТабличныйДокумент.Записать("C:\Users\innai\Desktop\Тест2.xlsx", ТипФайлаТабличногоДокумента.XLSX);
		Сообщить("Выгрузка выполнена");
	Иначе
		Сообщить("Выгрузка не выполнена! На выбранную дату отсутсвуют записи");
	КонецЕсли;
			
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Год = Год(ТекущаяДата());
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузкаПроизводственногоКалендаря(Команда)
	ЗагрузкаПроизводственногоКалендаряНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗагрузкаПроизводственногоКалендаряНаСервере()
	Ехсел=Новый COMObject("Excel.Application");
	Книга=Ехсел.Workbooks;
	Книга.Open("C:\Users\innai\Desktop\Тест2.xlsx");
	
	ТаблицаЗначений = Новый ТаблицаЗначений;
	ТаблицаЗначений.Колонки.Добавить("Период");
	ТаблицаЗначений.Колонки.Добавить("Календарь");
	ТаблицаЗначений.Колонки.Добавить("Год");
	ТаблицаЗначений.Колонки.Добавить("ВидДня");
	
	СчетчикЦикла=5;
	Год = 0;
	
	Пока СокрЛП(Ехсел.Cells(СчетчикЦикла,2).value) <> "" Цикл
		
		НоваяСтрока=ТаблицаЗначений.Добавить();
		НоваяСтрока.Период=СокрЛП(Ехсел.Cells(СчетчикЦикла,2).value);
		НоваяСтрока.Календарь=СокрЛП(Ехсел.Cells(СчетчикЦикла,4).value);
		НоваяСтрока.Год=СокрЛП(Ехсел.Cells(СчетчикЦикла,5).value);
		НоваяСтрока.ВидДня=СокрЛП(Ехсел.Cells(СчетчикЦикла,6).value);
		
		ЗагружаемыйГод = СокрЛП(Ехсел.Cells(СчетчикЦикла,5).value);

		СчетчикЦикла=СчетчикЦикла+1;
		
	КонецЦикла;
	
	Ехсел.Application.Quit(); 
	
	НаборЗаписей = РегистрыСведений.ПроизводственныйКалендарь.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Год.Установить(ЗагружаемыйГод);
	
	Для Каждого Строка Из ТаблицаЗначений Цикл
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.Период = Строка.Период;
		НоваяЗапись.Календарь = Справочники.Календари.ПроизводственныйКалендарь;
		НоваяЗапись.Год = Строка.Год;
		Если Строка.ВидДня = "Рабочий" Тогда  
			НоваяЗапись.ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Рабочий;
		ИначеЕсли Строка.ВидДня = "Нерабочий" Тогда  
			НоваяЗапись.ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Нерабочий;
		ИначеЕсли Строка.ВидДня = "Суббота" Тогда 
			НоваяЗапись.ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Суббота;
		ИначеЕсли Строка.ВидДня = "Воскресенье" Тогда 
			НоваяЗапись.ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Воскресенье;
		ИначеЕсли Строка.ВидДня = "Праздник" Тогда
			НоваяЗапись.ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Праздник;
		Иначе 
			НоваяЗапись.ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Предпраздничный;
		КонецЕсли;
	КонецЦикла;
	
	НаборЗаписей.Записать(); 	
КонецПроцедуры



