&НаСервере
Функция ПроверкаТРЗМесяцНаСервере(Сотрудник, ПланируемаяДата) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НАЧАЛОПЕРИОДА(ЗадачиСотрудниковСрезПоследних.Период, МЕСЯЦ) КАК Период,
		|	СУММА(ЗадачиСотрудниковСрезПоследних.Часы) КАК Часы
		|ИЗ
		|	РегистрСведений.ЗадачиСотрудников КАК ЗадачиСотрудниковСрезПоследних
		|ГДЕ
		|	ЗадачиСотрудниковСрезПоследних.Исполнитель = &Исполнитель
		|	И ЗадачиСотрудниковСрезПоследних.Период >= &Начало
		|	И ЗадачиСотрудниковСрезПоследних.Период <= &Окончание
		|
		|СГРУППИРОВАТЬ ПО
		|	НАЧАЛОПЕРИОДА(ЗадачиСотрудниковСрезПоследних.Период, МЕСЯЦ)";
	
	Запрос.УстановитьПараметр("Исполнитель", Сотрудник);
	Запрос.УстановитьПараметр("Начало",НачалоМесяца(ПланируемаяДата));
	Запрос.УстановитьПараметр("Окончание", КонецМесяца(ПланируемаяДата));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
	ЧасыМесяц = 0;
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ЧасыМесяц = ВыборкаДетальныеЗаписи.Часы;
	КонецЦикла;
	    	
	Возврат ЧасыМесяц;

КонецФункции

&НаСервере
Функция ПроверкаОтпусков(Период, Исполнитель) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОтпускаСотрудников.Сотрудник
	|ИЗ
	|	РегистрСведений.ОтпускаСотрудников КАК ОтпускаСотрудников
	|ГДЕ
	|	ОтпускаСотрудников.Период = &Период
	|	И ОтпускаСотрудников.Сотрудник = &Сотрудник";
	
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.УстановитьПараметр("Сотрудник", Исполнитель);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Отпуск = Ложь;
	
	Если ВыборкаДетальныеЗаписи.Количество()>0 Тогда
		Сообщить("На дату "+ Период +" у сотрудника " + Исполнитель + "назначен отпуск!");
		Отпуск =  Истина;		
	КонецЕсли;
	
	Возврат Отпуск;
	
КонецФункции

&НаСервере
Процедура ПроверкаПроизводственногоКалендаря(Период, Исполнитель) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПроизводственныйКалендарь.ВидДня
	|ИЗ
	|	РегистрСведений.ПроизводственныйКалендарь КАК ПроизводственныйКалендарь
	|ГДЕ
	|	ПроизводственныйКалендарь.Период = &Период";
	
	Запрос.УстановитьПараметр("Период", Период);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();	
	
	Если ВыборкаДетальныеЗаписи.Количество()>0 Тогда
		Сообщить("Вид дня по производственному календарю: "+ ВыборкаДетальныеЗаписи.ВидДня +"!");		
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Функция ПроверкаГрафикаРаботы(Период, Исполнитель) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КалендарьГрафиковРаботы.Сотрудник,
	|	КалендарьГрафиковРаботы.ВидВремениРаботы,
	|	КалендарьГрафиковРаботы.КоличествоРабочихЧасов
	|ИЗ
	|	РегистрСведений.КалендарьГрафиковРаботы КАК КалендарьГрафиковРаботы
	|ГДЕ
	|	КалендарьГрафиковРаботы.Сотрудник = &Сотрудник
	|	И КалендарьГрафиковРаботы.Период = &Период";
	
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.УстановитьПараметр("Сотрудник", Исполнитель);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Выходной = Ложь;
	
	Если ВыборкаДетальныеЗаписи.Количество()>0 Тогда
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Если ВыборкаДетальныеЗаписи.ВидВремениРаботы = Перечисления.ВидыВремениРаботы.Выходной Тогда
				Выходной = Истина;
				Сообщить("На дату "+ Период +" у сотрудника " + Исполнитель + "стоит выходной!");
				//ПроверкаПроизводственногоКалендаря(Период, Исполнитель);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;	
	
	Возврат Выходной;
	
КонецФункции

